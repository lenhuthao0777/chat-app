// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id       String @id @default(uuid())
  userId   String @unique
  name     String
  imageUrl String @db.Text
  email    String @db.Text

  createAt DateTime  @default(now()) @db.Timestamp()
  updateAt DateTime  @updatedAt @db.Timestamp()
  Server   Server[]
  Member   Member[]
  Channel  Channel[]
}

model Server {
  id         String  @id @default(uuid())
  name       String
  imageUrl   String  @db.Text
  inviteCode String  @unique
  profileId  String
  profile    Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  createAt DateTime  @default(now()) @db.Timestamp()
  updateAt DateTime  @updatedAt @db.Timestamp()
  Member   Member[]
  Channel  Channel[]

  @@index([profileId])
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id        String     @id @default(uuid())
  role      MemberRole @default(GUEST)
  profileId String
  profile   Profile    @relation(fields: [profileId], references: [id], onDelete: Cascade)

  serverId String
  server   Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createAt DateTime @default(now()) @db.Timestamp()
  updateAt DateTime @updatedAt @db.Timestamp()

  @@index([profileId])
  @@index([serverId])
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id   String      @id @default(uuid())
  name String
  type ChannelType @default(TEXT)

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  serverId String
  server   Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createAt DateTime @default(now()) @db.Timestamp()
  updateAt DateTime @updatedAt @db.Timestamp()

  @@index([profileId])
  @@index([serverId])
}
